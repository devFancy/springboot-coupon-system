global:
  scrape_interval: 15s
  evaluation_interval: 15s

scrape_configs:
  - job_name: 'coupon-api'
    metrics_path: '/actuator/prometheus'
    scrape_interval: 5s
    static_configs:
      - targets: ['host.docker.internal:8082']

  - job_name: 'coupon-consumer'
    metrics_path: '/actuator/prometheus'
    scrape_interval: 5s
    static_configs:
      - targets: ['host.docker.internal:8083']

  - job_name: 'redis-exporter'
    static_configs:
      - targets: [ 'redis-exporter:9121' ] # redis-exporter 서비스 이름과 내부 포트 사용

# Spring Boot 애플리케이션들의 메트릭 엔드포인트(/actuator/prometheus)를 모듈별로 다른 포트에서 노출하도록 설정
# 각 모듈의 application.yml 또는 profile 설정에서 management.server.port 값을 개별 지정
# prometheus.yml 에서는 모듈별 job_name을 나누고, 해당 포트에 맞게 scrape 대상을 추가해야 함
# 운영 트래픽(8080 등)과 모니터링 트래픽(8082, 8083 등)을 포트 기준으로 분리하여 관리
# 예시:
# - coupon-api: http://localhost:8082/actuator/prometheus
# - coupon-consumer: http://localhost:8083/actuator/prometheus
